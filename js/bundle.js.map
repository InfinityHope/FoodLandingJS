{"version":3,"sources":["webpack://foodjs/./js/modules/calc.js","webpack://foodjs/./js/modules/cards.js","webpack://foodjs/./js/modules/forms.js","webpack://foodjs/./js/modules/modal.js","webpack://foodjs/./js/modules/slider.js","webpack://foodjs/./js/modules/tabs.js","webpack://foodjs/./js/modules/timer.js","webpack://foodjs/webpack/bootstrap","webpack://foodjs/./js/script.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA,oEAAoE;AACpE;;AAEA;AACA;AACA,mCAAmC,IAAI;AACvC,+CAA+C,IAAI,GAAG;AACtD,SAAS,OAAO;AAChB,0BAA0B,MAAM;AAChC,oCAAoC,IAAI,MAAM,MAAM;AACpD;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,6DAA6D;;AAE7D;AACA,+CAA+C;AAC/C;AACA,gDAAgD;AAChD;AACA;AACA,gDAAgD;AAChD;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,SAAS,GAAG;;AAE/D;AACA;AACA,uCAAuC;AACvC,qD;AACA,8DAA8D;AAC9D,qFAAqF;AACrF,iBAAiB;AACjB,mDAAmD;AACnD,0EAA0E;AAC1E;;AAEA;AACA,uDAAuD;AACvD,iBAAiB;;AAEjB,iDAAiD;;AAEjD,4BAA4B;AAC5B,aAAa;AACb,SAAS;;AAET;;AAEA;AACA;;;AAGA,0CAA0C;AAC1C,uDAAuD;;AAEvD,+CAA+C;;AAE/C;AACA;AACA,aAAa;AACb;AACA;;AAEA,6CAA6C;AAC7C;AACA,0C;AACA;AACA;AACA,0C;AACA;AACA;AACA,uC;AACA;AACA;AACA,wBAAwB;AACxB,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA,sB;;;;;;;;;;AClHA;AACA;AACA;;AAEA;AACA,4BAA4B,iCAAiC;AAC7D;AACA;AACA;AACA,4BAA4B,IAAI,SAAS,OAAO;AAChD,kDAAkD,MAAM;AACxD,gDAAgD,MAAM;AACtD;AACA;AACA;AACA,0DAA0D,YAAY;AACtE;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA,uB;;;;;;;;;;ACxBA;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B,KAAK;;AAEL;AACA;AACA;AACA,sBAAsB;AACtB;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;;;AAGA,iCAAiC;AACjC,+CAA+C;AAC/C,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA,+B;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA,oCAAoC;AACpC,aAAa;AACb,yBAAyB;AACzB;AACA,aAAa;AACb,2B;AACA,6BAA6B;AAC7B,aAAa;AACb,SAAS;AACT;;AAEA;AACA,yEAAyE;;AAEzE,8CAA8C;AAC9C,oBAAoB;;AAEpB,0DAA0D;AAC1D,mDAAmD;AACnD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA,UAAU;;AAEV,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;;AAEA,uB;;;;;;;;;;AClFA;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA,KAAK;;AAEL,0BAA0B;AAC1B;AACA;AACA,4CAA4C;AAC5C,gCAAgC;AAChC;;AAEA,2BAA2B;AAC3B;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;;AAEA,2DAA2D;;AAE3D;;AAEA,uB;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;;AAE/D;AACA,mBAAmB;;AAEnB,4BAA4B;AAC5B,iCAAiC,cAAc;AAC/C,kCAAkC,MAAM;AACxC,KAAK;AACL;AACA;AACA;;AAEA,wDAAwD;AACxD,uCAAuC;AACvC,0CAA0C;;AAE1C,4CAA4C;;AAE5C;AACA,kCAAkC;AAClC,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B,mBAAmB,mBAAmB;AACtC,iDAAiD;AACjD,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,+BAA+B;AAC/B,uBAAuB;AACvB;AACA;AACA;AACA;AACA,2CAA2C,MAAM;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qEAAqE;AACrE;AACA,SAAS,O;AACT,6CAA6C;AAC7C;AACA,qDAAqD,OAAO,KAAK;;AAEjE,mCAAmC;AACnC,sBAAsB;AACtB,SAAS;AACT,oBAAoB;AACpB;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qDAAqD,OAAO;;AAE5D;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,mEAAmE;;AAEnE,4BAA4B;AAC5B,8DAA8D;;AAE9D,yDAAyD,OAAO;;AAEhE;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA,wB;;;;;;;;;;AC/IA;AACA;AACA;AACA,8DAA8D;;;AAG9D,+BAA+B;AAC/B,oCAAoC;AACpC,uCAAuC;AACvC;AACA,SAAS;;AAET,4BAA4B;AAC5B;AACA,SAAS;AACT;;AAEA,oCAAoC;AACpC,qDAAqD;AACrD;AACA,wDAAwD;AACxD;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD,oCAAoC;;AAEpC,mEAAmE;AACnE,sCAAsC;AACtC,mCAAmC;AACnC;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA,sB;;;;;;;;;;ACxCA;;AAEA,kCAAkC;;AAElC,uCAAuC;AACvC;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,uBAAuB,IAAI;AAC3B,SAAS;AACT;AACA;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,4DAA4D;;AAE5D,sBAAsB;;AAEtB,gCAAgC;AAChC,+CAA+C;;AAE/C,6CAA6C;AAC7C,+CAA+C;AAC/C,mDAAmD;AACnD,mDAAmD;AACnD;AACA;AACA;AACA;AACA,S;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;UCvDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,mBAAmB,mBAAO,CAAC,gDAAkB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","file":"bundle.js","sourcesContent":["function calc() {\r\n    const res = document.querySelector('.calculating__result span'); //результат\r\n    let sex, height, weight, age, ratio;\r\n\r\n    //Функция проверки значений из LocalStorage\r\n    const checkLocalValues = (variable, key, value) => {\r\n        if(localStorage.getItem(`${key}`)){\r\n            variable = localStorage.getItem(`${key}`); //если лежит то записать в переменную\r\n        } else {//если нет то выставить по умолчанию\r\n            variable = `${value}`;\r\n            localStorage.setItem(`${key}`, `${value}`);\r\n        }\r\n    };\r\n   \r\n    checkLocalValues(sex, 'sex', 'female');\r\n    checkLocalValues(ratio, 'ratio', 1.375);\r\n\r\n\r\n    //Выгрузка значений из LocalStorage\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector); //Получаем элемент\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass); //Убираем класс актив у всех\r\n            if(elem.getAttribute('id') === localStorage.getItem('sex')){\r\n                elem.classList.add(activeClass); //добавляем класс активности у того, которое прописано в LocalStorage\r\n            }\r\n            if(elem.getAttribute('data-ratio') === localStorage.getItem('ratio')){\r\n                elem.classList.add(activeClass); //добавляем класс активности у того, которое прописано в LocalStorage\r\n            }\r\n        });\r\n    }\r\n    \r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    //функция подсчета\r\n    const calcTotal = () => {\r\n        if(!sex || !height || !weight || !age || !ratio) {\r\n            res.textContent = '____';\r\n            return;\r\n        } //если ничего не выбрано не запускать код дальше\r\n        //рассчет по формулам в зависимости от пола\r\n        if(sex === 'female') {\r\n            res.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            res.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    };\r\n\r\n    calcTotal();\r\n    //получение информации\r\n    const getStaticInfo = (selector, activeClass) => {\r\n        const elems = document.querySelectorAll(`${selector}`); //получение элементов \r\n\r\n        elems.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                const value = e.target; //объект события\r\n                if(value.getAttribute('data-ratio')){ \r\n                    ratio = +value.getAttribute('data-ratio'); //получаем коэф активности\r\n                    localStorage.setItem('ratio', +value.getAttribute('data-ratio')); //запись в локалСтор\r\n                } else {\r\n                    sex = value.getAttribute('id'); //получаем пол\r\n                    localStorage.setItem('sex', value.getAttribute('id')); //запись в локалСтор\r\n                }\r\n    \r\n                elems.forEach(elem => {\r\n                    elem.classList.remove(activeClass); //убираем класс актив у всех не выбранных элементов\r\n                });\r\n    \r\n                value.classList.add(activeClass); //добавляем выбранному\r\n                \r\n                calcTotal(); //считаем\r\n            });\r\n        });\r\n              \r\n    };\r\n\r\n    getStaticInfo('#gender div', 'calculating__choose-item_active');\r\n    getStaticInfo('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\r\n    const getDynamicInfo = (selector) => { //получение динамических данных из инпутов\r\n        const input = document.querySelector(selector); //Получаем инпут\r\n        \r\n        input.addEventListener('input', () => { //обработчик на изменение в инпуте\r\n\r\n            if(input.value.match(/\\D/g)){\r\n                input.style.border = '2px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch(input.getAttribute('id')){ //проверяем id инпута и присваиваем переменным значение этого инпута\r\n                case 'height':\r\n                    height = +input.value; \r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value; \r\n                    break;\r\n                case 'age':\r\n                    age = +input.value; \r\n                    break;\r\n            }\r\n            calcTotal(); //считаем\r\n        });\r\n        \r\n    };\r\n\r\n    getDynamicInfo('#height');\r\n    getDynamicInfo('#weight');\r\n    getDynamicInfo('#age');\r\n}\r\n\r\nmodule.exports = calc;","function cards () {\r\n    axios.get('http://localhost:3000/menu')\r\n        .then(data => createCard(data));\r\n\r\n    function createCard(data) {\r\n        data.data.forEach(({img, altimg, title, descr, price}) =>{\r\n            const element = document.createElement('div');\r\n            element.classList.add('menu__item');\r\n            element.innerHTML = `\r\n                <img src=\"${img}\" alt=\"${altimg}\">\r\n                <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n                <div class=\"menu__item-descr\">${descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${price *= 27}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n\r\n            document.querySelector('.menu .container').append(element);\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n    const forms = document.querySelectorAll('form'); // формы\r\n\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо, мы скоро с вами свяжемся',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item); //подвязка функции на все формы\r\n    });\r\n\r\n    const postData = async (url, data) => {\r\n        const res = await fetch(url, {\r\n            method: 'POST', //метод передачи данных\r\n            headers: { //заголовки для JSON\r\n                'Content-type' :  'application/json'\r\n            },\r\n            body: data //данные из формы в JSON\r\n        });\r\n\r\n        return await res.json();\r\n    };\r\n\r\n\r\n    function bindPostData(form) { //функция отправки данных с формы\r\n        form.addEventListener('submit', (e) =>{ //обработчик на форму (отправить)\r\n            e.preventDefault(); //убрать дефолтное поведение\r\n            \r\n            //спиннер\r\n            let statusMess = document.createElement('img');\r\n            statusMess.src = message.loading;\r\n            statusMess.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;            \r\n            `;\r\n            form.insertAdjacentElement('afterend', statusMess);\r\n\r\n            const formData = new FormData(form); // объект для передачи данных форм на сервер\r\n            //Собираем все данные с формы в массив массивов, затем преобразуем его в объект и только потом в JSON\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data =>{ //выводим\r\n                showThanksModal(message.success);\r\n                statusMess.remove(); //удаление спиннера\r\n            })\r\n            .catch(() =>{ //ошибка\r\n                showThanksModal(message.failure);\r\n            })\r\n            .finally(() =>{ \r\n                form.reset(); //очистка форм\r\n            });\r\n        });\r\n    }\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog'); //Получаем контент модального окна\r\n\r\n        prevModalDialog.classList.add('hide'); //прячем его\r\n        openModal();//вызываем функцию открытия окна\r\n\r\n        const thanksModal = document.createElement('div'); //создаем новый контейнер для сообщения\r\n        thanksModal.classList.add('modal__dialog'); //добавляем ему класс обертки контента\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div> \r\n        `;//верстаем сообщение\r\n\r\n        document.querySelector('.modal').append(thanksModal); //добавляем его в модальное окно\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal();\r\n        }, 4000); //устанавливаем задержку удаления сообщения модального\r\n    }\r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n    const modal = document.querySelector('.modal'), //обертка модального окна\r\n    open = document.querySelectorAll('[data-modal]'), //кнопка окрытия модального окна\r\n    modalTimerId = setTimeout(openModal, 300000); //Таймер появления модального окна\r\n\r\n    open.forEach(item =>{\r\n    item.addEventListener('click', openModal);\r\n    });\r\n    \r\n    function openModal() { //функция показа модального окна\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden'; //убирает скролл при открытом модальном окне\r\n    clearInterval(modalTimerId); //очищает интервал если юзер самостоятельно его открыл\r\n    }\r\n\r\n    function closeModal() { //функция закрытия модального окна\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = ''; //Ставится по умолчанию браузером\r\n    }\r\n\r\n    //Обработчик события на закрытие по клику на подложку (вне модального окна) или по кнопке\r\n    modal.addEventListener('click', (e)=>{\r\n    if(e.target === modal || e.target.getAttribute('data-close') == ''){\r\n        closeModal();\r\n    }\r\n    });\r\n    //Для закрытия по клавише ESC\r\n    document.addEventListener('keydown', (e)=>{\r\n    if(e.code === \"Escape\" && modal.classList.contains('show')){\r\n        closeModal();\r\n    }\r\n    });\r\n    //функция показа окна при завершении скролла сайта\r\n    function showModalByScroll(){\r\n    //Проверка что пользователь отлистал весь контент\r\n    if(window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight){\r\n        openModal();\r\n        window.removeEventListener('scroll', showModalByScroll());//удаление обработчика события по завершении скролла\r\n    }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll()); //Показ по завершении скролла\r\n\r\n}\r\n\r\nmodule.exports = modal;","function slider () {\r\n    const slides = document.querySelectorAll('.offer__slide'), //слайды\r\n          slider = document.querySelector('.offer__slider'),\r\n          prev = document.querySelector('.offer__slider-prev'), //кнопка назад\r\n          next = document.querySelector('.offer__slider-next'), //кнопка вперед \r\n          total = document.querySelector('#total'), //всего слайдов\r\n          current = document.querySelector('#current'),//текущий слайд\r\n          slidesWrapper = document.querySelector('.offer__slider-wrapper'), //Обертка всего слайдера\r\n          slidesField = document.querySelector('.offer__slider-inner'), //Обертка слайдов\r\n          width = window.getComputedStyle(slidesWrapper).width; //Ширина обертки слайдера\r\n\r\n    let index = 1,//индекс слайда\r\n        offset = 0; //Переменная по которой сдвигается слайдер\r\n\r\n    if(slides.length < 10) { //проверка если слайдов меньше 10 то подставить 0 в общее кол-во\r\n        total.textContent  = `0${slides.length}`;\r\n        current.textContent = `0${index}`;\r\n    } else {\r\n        total.textContent  = slides.length;\r\n        current.textContent = index;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%'; //Устанавливаем ширину обертки по всем слайдам\r\n    slidesField.style.display = 'flex'; //Выставляем флекс для обертки\r\n    slidesField.style.transition = '0.5s'; //задержка\r\n\r\n    slidesWrapper.style.overflow = 'hidden'; //прямчем все что вне обертки\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width; //Фиксированная ширина для всех слайдов по ширине обертки \r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n    \r\n    const indicators = document.createElement('ol'), //Массив точек и список\r\n          dots = [];\r\n\r\n    indicators.classList.add('carousel-dots');\r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n    slider.append(indicators); //добавление точек к слайдеру\r\n\r\n    for (let i = 0; i < slides.length; i++){\r\n        const dot = document.createElement('li'); //создание точек по кол-ву слайдов\r\n        dot.setAttribute('data-slide-to', i + 1); //установка аттрибута (слайд = точка)\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n        if(i == 0) {\r\n            dot.style.opacity = 1; //Для первой точки opacity 1 при загрузке стр\r\n        }\r\n        indicators.append(dot); //аппендим точки \r\n        dots.push(dot); //заносим их в массив для дальнейшей работы с ними\r\n    }\r\n    //Функция нуля перед индексом\r\n    const  indexZero = (currentSlide) =>{\r\n        if(slides.length < 10){\r\n            currentSlide.textContent = `0${index}`;\r\n        } else {\r\n            currentSlide.textContent = index;\r\n        }\r\n    };\r\n    //изменение стиля точек при выбранном слайде\r\n    const dotOpacityTo = () => {\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[index - 1].style.opacity = 1;\r\n    };\r\n\r\n    const deleteNotDigits = str => +str.replace(/\\D/g, '');\r\n\r\n    next.addEventListener('click', ()=> {\r\n        if(offset == deleteNotDigits(width) * (slides.length   - 1)){ //если дошел до последнего слайда, к началу\r\n            offset = 0;\r\n        } else { \r\n            offset += deleteNotDigits(width); //прибавляем к offset ширину слайда\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`; //смещаем его по переменной offset\r\n\r\n        if(index == slides.length){ //если индекс будет равен последнему слайду\r\n            index = 1; //выставляем его в 1\r\n        } else {\r\n            index++; //иначе прибавляем\r\n        }\r\n\r\n        indexZero(current);\r\n        dotOpacityTo();\r\n    });\r\n    //аналогично, но с другими условиями\r\n    prev.addEventListener('click', ()=> {\r\n        if(offset == 0){\r\n            offset = deleteNotDigits(width) * (slides.length   - 1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if(index == 1){\r\n            index = slides.length;\r\n        } else {\r\n            index--;\r\n        }\r\n\r\n        indexZero(current);\r\n        dotOpacityTo();\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to'); //получаем объект события и его аттрибут\r\n\r\n            index = slideTo; //Записываем его в индекс\r\n            offset = deleteNotDigits(width) * (slideTo   - 1); //изменяем оффсет и сдвигаем слайд и меняем точку\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            indexZero(current);\r\n            dotOpacityTo();\r\n        });\r\n    });\r\n}\r\n\r\nmodule.exports = slider;","function tabs() {\r\n    const tabs = document.querySelectorAll('.tabheader__item'), //табы (переключатели)\r\n    tabsContent = document.querySelectorAll('.tabcontent'), //Контент вкладки\r\n    tabsWrapper = document.querySelector('.tabheader__items'); //Обертка табов (для делегирования)\r\n\r\n\r\n    function hideTabContent() { //Функция скрытия контента\r\n        tabsContent.forEach(item =>{ //Перебираем весь псевдомассив с контентом \r\n            item.classList.add('hide'); //прячем контент с помощью класса hide\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(tab =>{ //Перебираем весь псевдомассив с табами и убираем класс активности\r\n            tab.classList.remove('tabheader__item_active');\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) { //Функция для показа контента под индексом i, который передается в качестве агрумента\r\n        tabsContent[i].classList.add('show', 'fade'); // добавления класса show и анимации fade\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add('tabheader__item_active'); // и добавляем класс активности табу\r\n    }\r\n    //Вызов функций\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsWrapper.addEventListener('click', (event)=>{ //Делегирование событий на обертку табов\r\n        const target = event.target; //запись target\r\n\r\n        if(target && target.classList.contains('tabheader__item')){ //Проверка клика на таб\r\n            tabs.forEach((item, i) =>{ //перебор табов с их индексом\r\n                if(target == item){ //сверяем произошел ли клик именно на таб и вызываем функции скрытия контета и показа\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = tabs;","function timer() {\r\n    \r\n    const deadline = '2021-08-10'; // константа окончания таймера\r\n\r\n    function getTimeRemaning(endtime) { //функция которая получает разницу между текущим временем и дедлайном\r\n        const t = Date.parse(endtime) - new Date(), //получаем разницу между датами в милисекундах \r\n              days = Math.floor(t / (1000 * 60 * 60 * 24)), //вычисляем дни\r\n              hours = Math.floor((t / (1000 * 60 * 60) % 24)), //вычисляем часы\r\n              minutes = Math.floor((t / 1000 / 60) % 60),  //вычисляем минуты\r\n              seconds = Math.floor((t / 1000) % 60);  //вычисляем секунды\r\n        //возвращаем переменные в виде объекта\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n    //функция для добавления нуля перед число если оно меньше 10\r\n    function getZero(num){\r\n        if(num >= 0 && num < 10){ //если больше нуля и меньше 10\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) { //функция установки таймера на страницу \r\n        const timer = document.querySelector(selector), //получение таймера со страницы\r\n              days = timer.querySelector('#days'), //дни\r\n              hours = timer.querySelector('#hours'), //часы\r\n              minutes = timer.querySelector('#minutes'), //минуты\r\n              seconds= timer.querySelector('#seconds'), //секунды\r\n              timeInterval = setInterval(updateClock, 1000); //обновление таймера каждую секунду\r\n\r\n        updateClock(); //Вызов функции чтобы не было задержки на странице в 1 секунду\r\n\r\n        function updateClock() { //для обновления даты\r\n            const t = getTimeRemaning(endtime); //получение объекта\r\n\r\n            days.innerHTML = getZero(t.days); //Вывод дней\r\n            hours.innerHTML = getZero(t.hours); //Вывод часов\r\n            minutes.innerHTML = getZero(t.minutes); //Вывод минут\r\n            seconds.innerHTML = getZero(t.seconds); //Вывод секунд\r\n            //если дедлайн наступил, то очистить интервал\r\n            if(t.total <= 0){\r\n                clearInterval(timeInterval);\r\n            }\r\n        }   \r\n    }\r\n    //Вызов таймера\r\n    setClock('.timer', deadline);\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', ()=>{\r\n    const tabs = require('./modules/tabs'),\r\n          modal = require('./modules/modal'),\r\n          timer = require('./modules/timer'),\r\n          cards = require('./modules/cards'),\r\n          calc = require('./modules/calc'),\r\n          forms = require('./modules/forms'),\r\n          slider = require('./modules/slider');\r\n\r\n    tabs();\r\n    modal();\r\n    timer();\r\n    cards();\r\n    calc();\r\n    forms();\r\n    slider();\r\n});"],"sourceRoot":""}